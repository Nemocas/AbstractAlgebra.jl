name: Run tests

on:
  push:
    branches:
      - 'master'
      - 'release-'
    tags: '*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.0'
          - '1.1'
          - '1.2'
          - '1.3'
          - '1.4'
          - '1.5'
          - '1.6'
          - 'nightly'
        julia-arch:
          - x64
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        exclude:
          # Reduce the number of macOS jobs, as fewer can be run in parallel
          - os: macOS-latest
            julia-version: '1.1'
          - os: macOS-latest
            julia-version: '1.2'
          - os: macOS-latest
            julia-version: '1.3'
          - os: macOS-latest
            julia-version: '1.4'
          - os: macOS-latest
            julia-version: '1.5'
          - os: windows-latest
            julia-version: '1.1'
          - os: windows-latest
            julia-version: '1.2'
          - os: windows-latest
            julia-version: '1.3'
          - os: windows-latest
            julia-version: '1.4'
          - os: windows-latest
            julia-version: '1.5'

    steps:
      - uses: actions/checkout@v2
        with:
          # For Codecov, we must also fetch the parent of the HEAD commit to
          # be able to properly deal with PRs / merges
          fetch-depth: 2
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Build package"
        uses: julia-actions/julia-buildpkg@latest
      - name: "Run tests"
        uses: julia-actions/julia-runtest@latest
      - name: "Run doctests"
        if: ${{ matrix.julia-version == '1.5' }}
        run: |
          julia --project=docs --color=yes --code-coverage -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
            using Documenter: doctest
            using AbstractAlgebra
            doctest(AbstractAlgebra)'
      - name: "Process code coverage"
        uses: julia-actions/julia-processcoverage@v1
      - name: "Upload coverage data to Codecov"
        continue-on-error: true
        uses: codecov/codecov-action@v1

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
